# Master makefile for DL_POLY_4.08 (serial version 1)
#
# Author - I.T.Todorov March 2016
#
#
# Define default settings
#=====================================================================

SHELL=/bin/sh

.SUFFIXES:
.SUFFIXES: .f90 .F90 .o

BINROOT=../execute
EX=DLPOLY.Z
EXE=$(BINROOT)/$(EX)

BUILDER?='Your Name'
HOSTNAME='$(shell hostname)'

TYPE=master

FC=undefined
LD=undefined

# Define object files
#=====================================================================

OBJ_MOD = \
	kinds_f90.o mpi_module.o comms_module.o setup_module.o \
	parse_module.o development_module.o netcdf_modul~.o io_module.o \
	domains_module.o \
	site_module.o config_module.o vnl_module.o \
	defects_module.o defects1_module.o \
	dpd_module.o \
	ewald_module.o mpoles_module.o poisson_module.o \
	vdw_module.o metal_module.o tersoff_module.o \
	three_body_module.o four_body_module.o kim_modul~.o plumed_modul~.o \
	rdf_module.o z_density_module.o \
	core_shell_module.o \
	constraints_module.o pmf_module.o \
	rigid_bodies_module.o \
	tethers_module.o \
	bonds_module.o angles_module.o dihedrals_module.o inversions_module.o \
	\
	external_field_module.o langevin_module.o minimise_module.o \
	msd_module.o statistics_module.o greenkubo_module.o \
	\
	kinetic_module.o

OBJ_ALL = \
	warning.o error.o scan_control_io.o \
	numeric_container.o quaternions_container.o \
	mpoles_container.o spme_container.o \
	scan_field.o scan_control_pre.o \
	read_config_parallel.o scan_config.o scan_control.o read_config.o \
	set_bounds.o \
	read_control.o \
	bonds_table_read.o angles_table_read.o \
	dihedrals_table_read.o inversions_table_read.o \
	vdw_generate.o vdw_table_read.o vdw_direct_fs_generate.o \
	metal_generate_erf.o metal_generate.o metal_table_read.o metal_table_derivatives.o \
	tersoff_generate.o dihedrals_14_check.o read_mpoles.o read_field.o \
	check_config.o origin_config.o scale_config.o write_config.o \
	trajectory_write.o system_expand.o \
	rigid_bodies_tags.o rigid_bodies_coms.o rigid_bodies_widths.o \
	rigid_bodies_setup.o \
	init_intra.o tag_legend.o report_topology.o pass_shared_units.o \
	build_book_intra.o build_tplg_intra.o build_excl_intra.o \
	scale_temperature.o update_shared_units.o \
	core_shell_quench.o constraints_tags.o constraints_quench.o \
	pmf_coms.o pmf_tags.o pmf_vcoms.o pmf_quench.o \
	rigid_bodies_quench.o \
	set_temperature.o \
	vdw_lrc.o metal_lrc.o system_init.o vnl_check.o \
	export_atomic_data.o set_halo_particles.o \
	export_atomic_positions.o refresh_halo_positions.o \
	mpoles_rotmat_export.o mpoles_rotmat_set_halo.o \
	rigid_bodies_stress.o \
	read_history.o \
	defects_reference_read.o defects_reference_read_parallel.o \
	defects_reference_write.o \
	defects_reference_export.o defects_reference_set_halo.o \
	defects_link_cells.o defects1_write.o defects_write.o \
	msd_write.o rsd_write.o vaf_write.o \
	impact.o core_shell_on_top.o \
	deport_atomic_data.o pmf_units_set.o compress_book_intra.o \
	relocate_particles.o \
	link_cell_pairs.o \
	dpd_v_export.o dpd_v_set_halo.o dpd_thermostat.o \
	metal_ld_collect_eam.o metal_ld_collect_fst.o \
	metal_ld_export.o metal_ld_set_halo.o \
	metal_ld_compute.o \
	ewald_spme_forc~s.o ewald_spme_mforc~s.o ewald_spme_mforc~s_d.o \
	metal_forces.o vdw_forces.o \
	ewald_real_forces.o ewald_real_mforces.o ewald_real_mforces_d.o \
	coul_dddp_forces.o coul_dddp_mforces.o \
	coul_cp_forces.o coul_cp_mforces.o \
	coul_fscp_forces.o coul_fscp_mforces.o \
	coul_rfp_forces.o coul_rfp_mforces.o \
	ewald_excl_forces.o ewald_excl_mforces.o ewald_excl_mforces_d.o \
	ewald_frzn_forces.o ewald_frzn_mforces.o \
	rdf_collect.o rdf_excl_collect.o rdf_frzn_collect.o \
	d_ene_trq_mpoles.o two_body_forces.o \
	tersoff_forces.o three_body_forces.o four_body_forces.o \
	core_shell_forces.o tethers_forces.o \
	intra_coul.o intra_mcoul.o bonds_forces.o angles_forces.o \
	dihedrals_14_vdw.o dihedrals_forces.o inversions_forces.o \
	external_field_apply.o external_field_correct.o \
	langevin_forces.o \
	constraints_pseudo_bonds.o pmf_pseudo_bonds.o \
	rigid_bodies_split_torque.o rigid_bodies_move.o minimise_relax.o \
	core_shell_relax.o zero_k_optimise.o vaf_collect.o \
	nvt_e0_scl.o nvt_e1_scl.o nvt_b0_scl.o nvt_b1_scl.o \
	\
	pseudo_vv.o \
	constraints_shake_vv.o pmf_shake_vv.o \
	constraints_rattle.o pmf_rattle.o \
	nvt_h0_scl.o nvt_g0_scl.o npt_h0_scl.o nst_h0_scl.o \
	nve_0_vv.o nvt_e0_vv.o \
	nvt_l0_vv.o nvt_a0_vv.o nvt_b0_vv.o nvt_h0_vv.o nvt_g0_vv.o \
	npt_l0_vv.o npt_b0_vv.o npt_h0_vv.o npt_m0_vv.o \
	nst_l0_vv.o nst_b0_vv.o nst_h0_vv.o nst_m0_vv.o \
	nvt_h1_scl.o nvt_g1_scl.o npt_h1_scl.o nst_h1_scl.o \
	nve_1_vv.o nvt_e1_vv.o \
	nvt_l1_vv.o nvt_a1_vv.o nvt_b1_vv.o nvt_h1_vv.o nvt_g1_vv.o \
	npt_l1_vv.o npt_b1_vv.o npt_h1_vv.o npt_m1_vv.o \
	nst_l1_vv.o nst_b1_vv.o nst_h1_vv.o nst_m1_vv.o \
	\
	pseudo_lfv.o \
	constraints_shake_lfv.o pmf_shake_lfv.o \
	nve_0_lfv.o nvt_e0_lfv.o \
	nvt_l0_lfv.o nvt_a0_lfv.o nvt_b0_lfv.o nvt_h0_lfv.o nvt_g0_lfv.o \
	npt_l0_lfv.o npt_b0_lfv.o npt_h0_lfv.o npt_m0_lfv.o \
	nst_l0_lfv.o nst_b0_lfv.o nst_h0_lfv.o nst_m0_lfv.o \
	nve_1_lfv.o nvt_e1_lfv.o \
	nvt_l1_lfv.o nvt_a1_lfv.o nvt_b1_lfv.o nvt_h1_lfv.o nvt_g1_lfv.o \
	npt_l1_lfv.o npt_b1_lfv.o npt_h1_lfv.o npt_m1_lfv.o \
	nst_l1_lfv.o nst_b1_lfv.o nst_h1_lfv.o nst_m1_lfv.o \
	\
	xscale.o core_shell_kinetic.o regauss_temperature.o \
	\
	z_density_collect.o statistics_collect.o \
	statistics_connect_set.o statistics_connect_spread.o statistics_connect_frames.o \
	system_revive.o \
	rdf_compute.o z_density_compute.o vaf_compute.o \
	bonds_compute.o angles_compute.o dihedrals_compute.o inversions_compute.o \
	statistics_result.o \
	dl_poly.o

# Define MPI-SERIAL files
#=====================================================================

FILES_SERIAL = mpi_module.f90 mpif.h \
	ewald_spme_forc~s.f90 ewald_spme_mforc~s.f90 ewald_spme_mforc~s_d.f90

# Define Velocity Verlet files
#=====================================================================

FILES_VV = \
	pseudo_vv.f90 \
	constraints_shake_vv.f90 pmf_shake_vv.f90 \
	constraints_rattle.f90 pmf_rattle.f90 \
	nvt_h0_scl.f90 nvt_g0_scl.f90 npt_h0_scl.f90 nst_h0_scl.f90 \
	nve_0_vv.f90 nvt_e0_vv.f90 \
	nvt_l0_vv.f90 nvt_a0_vv.f90 nvt_b0_vv.f90 nvt_h0_vv.f90 nvt_g0_vv.f90 \
	npt_l0_vv.f90 npt_b0_vv.f90 npt_h0_vv.f90 npt_m0_vv.f90 \
	nst_l0_vv.f90 nst_b0_vv.f90 nst_h0_vv.f90 nst_m0_vv.f90 \
	nvt_h1_scl.f90 nvt_g1_scl.f90 npt_h1_scl.f90 nst_h1_scl.f90 \
	nve_1_vv.f90 nvt_e1_vv.f90 \
	nvt_l1_vv.f90 nvt_a1_vv.f90 nvt_b1_vv.f90 nvt_h1_vv.f90 nvt_g1_vv.f90 \
	npt_l1_vv.f90 npt_b1_vv.f90 npt_h1_vv.f90 npt_m1_vv.f90 \
	nst_l1_vv.f90 nst_b1_vv.f90 nst_h1_vv.f90 nst_m1_vv.f90 \
	w_at_start_vv.f90 w_integrate_vv.f90 w_md_vv.f90

# Define LeapFrog Verlet files
#=====================================================================

FILES_LFV = \
	pseudo_lfv.f90 \
	constraints_shake_lfv.f90 pmf_shake_lfv.f90 \
	nve_0_lfv.f90 nvt_e0_lfv.f90 \
	nvt_l0_lfv.f90 nvt_a0_lfv.f90 nvt_b0_lfv.f90 nvt_h0_lfv.f90 nvt_g0_lfv.f90 \
	npt_l0_lfv.f90 npt_b0_lfv.f90 npt_h0_lfv.f90 npt_m0_lfv.f90 \
	nst_l0_lfv.f90 nst_b0_lfv.f90 nst_h0_lfv.f90 nst_m0_lfv.f90 \
	nve_1_lfv.f90 nvt_e1_lfv.f90 \
	nvt_l1_lfv.f90 nvt_a1_lfv.f90 nvt_b1_lfv.f90 nvt_h1_lfv.f90 nvt_g1_lfv.f90 \
	npt_l1_lfv.f90 npt_b1_lfv.f90 npt_h1_lfv.f90 npt_m1_lfv.f90 \
	nst_l1_lfv.f90 nst_b1_lfv.f90 nst_h1_lfv.f90 nst_m1_lfv.f90 \
	w_at_start_lfv.f90 w_integrate_lfv.f90 w_md_lfv.f90

# Examine targets manually
#=====================================================================

all:
	@echo
	@echo "You MUST specify or choose a permissive target platform!"
	@echo
	@echo "The available, permissive targets are displayed below:"
	@echo
	@echo "gnu || gnu-debug"
	@echo
	@echo "Please examine this Makefile's targets for details!"
	@echo "If no target suits your system then create your own"
	@echo "using the advice in generic target template provided"
	@echo "in this Makefile under the entry 'uknown_platform:'."
	@echo

# Fetch MPI-SERIAL subroutines
#=====================================================================

$(FILES_SERIAL):
	$(MAKE) links_serial

links_serial:
	@for file in ${FILES_SERIAL} ; do \
	echo linking to $$file ; \
	rm -f $$file ; \
	ln -s SERIAL/$$file $$file ; \
	done

# Fetch the Velocity Verlet subroutines
#=====================================================================

$(FILES_VV):
	$(MAKE) links_vv

links_vv:
	@for file in ${FILES_VV} ; do \
	echo linking to $$file ; \
	rm -f $$file ; \
	ln -s VV/$$file $$file ; \
	done

# Fetch the LeapFrog Verlet subroutines
#=====================================================================

$(FILES_LFV):
	$(MAKE) links_lfv

links_lfv:
	@for file in ${FILES_LFV} ; do \
	echo linking to $$file ; \
	rm -f $$file ; \
	ln -s LFV/$$file $$file ; \
	done

# Clean up the source directory
#=====================================================================

clean:
	rm -f $(OBJ_MOD) $(OBJ_ALL) $(FILES_VV) $(FILES_LFV) *.mod

# Generic target template
#=====================================================================
uknown_platform:
	$(MAKE) LD="path to FORTRAN90 Linker-loaDer" \
	LDFLAGS="appropriate flags for LD (MPI libraries)" \
	FC="path to FORTRAN90 compiler" \
	FCFLAGS="appropriate flags for FC (MPI include) \
	         -DBUILDER=\"$(BUILDER)\" -DHOST=\"$(HOSTNAME)\"" \
	EX=$(EX) BINROOT=$(BINROOT) $(TYPE)

# System specific targets follow:
#=====================================================================

#================== System Default  ==================================
gnu:
	$(MAKE) LD="gfortran -o"
	LDFLAGS="-O3" \
	FC="gfortran -c" \
	FCFLAGS="-O3 -DBUILDER=\"$(BUILDER)\" -DHOST=\"$(HOSTNAME)\"" \
	EX=$(EX) BINROOT=$(BINROOT) $(TYPE)

#====================== GNU fortran compiler - DEBUG =================
gnu-debug:
	$(MAKE) LD="gfortran -o" \
	LDFLAGS="-O3 -g -fbacktrace" \
	FC="gfortran -c" \
	FCFLAGS="-O3 -Wall -Wextra -pedantic -g -fbounds-check -fbacktrace \
	         -finit-integer=-9999 -finit-real=nan -std=f2003 -fdump-core \
	         -ffpe-trap=invalid,zero,overflow -frecord-gcc-switches \
	         -DBUILDER=\"$(BUILDER)\" -DHOST=\"$(HOSTNAME)\"" \
	EX=$(EX) BINROOT=$(BINROOT) $(TYPE)

# Default code
#=====================================================================

master: message check $(OBJ_MOD) $(OBJ_ALL)
	$(LD) $(EXE) $(LDFLAGS) $(OBJ_MOD) $(OBJ_ALL)

# Message
message:
	@echo "DL_POLY_4 compilation in SRL1 mode"
	@echo
	@echo "'Use mpi' must change to 'Use mpi_module' in 'comms_module.F90'"
	@echo

# Check that a platform has been specified
check:
	@if test "${FC}" = "undefined"; then \
	echo; echo "*** FORTRAN90 compiler unspecified!"; \
	echo; echo "*** Please edit your Makefile entries!"; \
	echo; exit 99; \
	fi; \
	\
	if test "${LD}" = "undefined"; then \
	echo; echo "*** FORTRAN90 Linker-loaDer unspecified!"; \
	echo; echo "*** Please edit your Makefile entries!"; \
	echo; exit 99; \
	fi; \
	\
	mkdir -p $(BINROOT) ; touch dl_poly.f90

# Declare rules
#=====================================================================

.f90.o:
	$(FC) $(FCFLAGS) $*.f90

.F90.o:
	$(FC) $(FCFLAGS) $*.F90

# Declare dependencies
#=====================================================================

$(OBJ_ALL): $(OBJ_MOD)
